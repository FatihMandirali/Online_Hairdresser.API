version: '3.4'

services:
  online_hairdresser.api:
    image: fthmndrli/onlinehairdresserapi
    ports:
      - 5006:5006
    restart: always
    environment:
        ASPNETCORE_APPREQUIREHOST: "*:5006"
        ASPNETCORE_URLS: "http://*:5006"
        TZ: Turkey
        ConnectionStrings__SqlConnection: 
            Host=postgres;Database=postgres;Username=postgres;Password=postgres
    depends_on:
        - postgres
        - pgadmin
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      TZ: Turkey
      POSTGRESQL_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
       - postgres:/data/postgres
    ports:
      - "5433:5432"
    tty: true
    restart: always
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      TZ: Turkey
      PGADMIN_DEFAULT_EMAIL: hairdresser@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: hairdresser@123
      PGADMIN_LISTEN_PORT: 5050
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:5050"
    tty: true
    depends_on:
      - postgres
    links:
      - postgres  
  frontend:
    container_name: frontend
    image: fthmndrli/online-hairdresser-ui-admin
    ports:
      - "8085:80"
    restart: always
    environment:
       VUE_APP_API_URL: http://localhost:98765/api
    depends_on:
      - online_hairdresser.api
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data      
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.10.1
    ports:
      - "8200:8200"
    depends_on:
      - elasticsearch
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    #command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
  mongodb:
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - dbdata6:/data/db

volumes:
    postgres:
    pgadmin:
    esdata:
    cache:
    dbdata6:  